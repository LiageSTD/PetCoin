/*
 * This file is generated by jOOQ.
 */
package org.coinpet.petcoin.repository.jooq.model.public_.tables.records;


import org.coinpet.petcoin.repository.jooq.model.public_.tables.Cryptocurrencies;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CryptocurrenciesRecord extends UpdatableRecordImpl<CryptocurrenciesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.cryptocurrencies.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.cryptocurrencies.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.cryptocurrencies.symbol</code>.
     */
    public void setSymbol(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.cryptocurrencies.symbol</code>.
     */
    public String getSymbol() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.cryptocurrencies.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.cryptocurrencies.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.cryptocurrencies.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.cryptocurrencies.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.cryptocurrencies.rank</code>.
     */
    public void setRank(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.cryptocurrencies.rank</code>.
     */
    public Integer getRank() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CryptocurrenciesRecord
     */
    public CryptocurrenciesRecord() {
        super(Cryptocurrencies.CRYPTOCURRENCIES);
    }

    /**
     * Create a detached, initialised CryptocurrenciesRecord
     */
    public CryptocurrenciesRecord(Integer id, String symbol, String name, String description, Integer rank) {
        super(Cryptocurrencies.CRYPTOCURRENCIES);

        setId(id);
        setSymbol(symbol);
        setName(name);
        setDescription(description);
        setRank(rank);
        resetChangedOnNotNull();
    }
}
